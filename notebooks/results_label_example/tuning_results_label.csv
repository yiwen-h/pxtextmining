mean_fit_time,std_fit_time,mean_score_time,std_score_time,param_sampling__kw_args,param_preprocessor__texttr__text__transformer__use_idf,param_preprocessor__texttr__text__transformer__tokenizer,param_preprocessor__texttr__text__transformer__preprocessor,param_preprocessor__texttr__text__transformer__norm,param_preprocessor__texttr__text__transformer__ngram_range,param_preprocessor__texttr__text__transformer__min_df,param_preprocessor__texttr__text__transformer__max_df,param_preprocessor__texttr__text__transformer,param_preprocessor__sentimenttr__scaler__scaler__n_bins,param_preprocessor__sentimenttr__scaler__scaler,param_preprocessor__lengthtr__scaler__scaler,param_featsel__selector__score_func,param_featsel__selector__percentile,param_featsel__selector,param_clf__estimator,param_clf__estimator__penalty,param_clf__estimator__max_iter,param_clf__estimator__loss,param_clf__estimator__class_weight,params,split0_test_Accuracy,split1_test_Accuracy,split2_test_Accuracy,split3_test_Accuracy,split4_test_Accuracy,mean_test_Accuracy,std_test_Accuracy,rank_test_Accuracy,split0_test_Balanced Accuracy,split1_test_Balanced Accuracy,split2_test_Balanced Accuracy,split3_test_Balanced Accuracy,split4_test_Balanced Accuracy,mean_test_Balanced Accuracy,std_test_Balanced Accuracy,rank_test_Balanced Accuracy,split0_test_Matthews Correlation Coefficient,split1_test_Matthews Correlation Coefficient,split2_test_Matthews Correlation Coefficient,split3_test_Matthews Correlation Coefficient,split4_test_Matthews Correlation Coefficient,mean_test_Matthews Correlation Coefficient,std_test_Matthews Correlation Coefficient,rank_test_Matthews Correlation Coefficient,split0_test_Class Balance Accuracy,split1_test_Class Balance Accuracy,split2_test_Class Balance Accuracy,split3_test_Class Balance Accuracy,split4_test_Class Balance Accuracy,mean_test_Class Balance Accuracy,std_test_Class Balance Accuracy,rank_test_Class Balance Accuracy,learner
9.979373741149903,0.17319106770535636,1.4218368053436279,0.07599966937327966,{'up_balancing_counts': 300},False,<pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7ff895167a00>,<function text_preprocessor at 0x7ff86e9cf3a0>,l2,"(1, 3)",1,0.95,"TfidfVectorizer(max_df=0.95, ngram_range=(1, 3),
                preprocessor=<function text_preprocessor at 0x7ff86e9cf3a0>,
                tokenizer=<pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7ff895167a00>,
                use_idf=False)",8,"KBinsDiscretizer(n_bins=8, strategy='kmeans')","KBinsDiscretizer(n_bins=3, strategy='kmeans')",<function chi2 at 0x7ff86e9b8790>,85,"SelectPercentile(percentile=85, score_func=<function chi2 at 0x7ff86e9b8790>)","SGDClassifier(class_weight='balanced', loss='log', max_iter=10000)",l2,10000,log,balanced,"{'sampling__kw_args': {'up_balancing_counts': 300}, 'preprocessor__texttr__text__transformer__use_idf': False, 'preprocessor__texttr__text__transformer__tokenizer': <pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7ff895167a00>, 'preprocessor__texttr__text__transformer__preprocessor': <function text_preprocessor at 0x7ff86e9cf3a0>, 'preprocessor__texttr__text__transformer__norm': 'l2', 'preprocessor__texttr__text__transformer__ngram_range': (1, 3), 'preprocessor__texttr__text__transformer__min_df': 1, 'preprocessor__texttr__text__transformer__max_df': 0.95, 'preprocessor__texttr__text__transformer': TfidfVectorizer(max_df=0.95, ngram_range=(1, 3),
                preprocessor=<function text_preprocessor at 0x7ff86e9cf3a0>,
                tokenizer=<pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7ff895167a00>,
                use_idf=False), 'preprocessor__sentimenttr__scaler__scaler__n_bins': 8, 'preprocessor__sentimenttr__scaler__scaler': KBinsDiscretizer(n_bins=8, strategy='kmeans'), 'preprocessor__lengthtr__scaler__scaler': KBinsDiscretizer(n_bins=3, strategy='kmeans'), 'featsel__selector__score_func': <function chi2 at 0x7ff86e9b8790>, 'featsel__selector__percentile': 85, 'featsel__selector': SelectPercentile(percentile=85, score_func=<function chi2 at 0x7ff86e9b8790>), 'clf__estimator__penalty': 'l2', 'clf__estimator__max_iter': 10000, 'clf__estimator__loss': 'log', 'clf__estimator__class_weight': 'balanced', 'clf__estimator': SGDClassifier(class_weight='balanced', loss='log', max_iter=10000)}",0.6599277978339351,0.6664259927797834,0.6476534296028881,0.6445086705202312,0.6575144508670521,0.6552060683207779,0.00806209322381307,1,0.5047533529887036,0.5398918716606171,0.5376030314013198,0.5210773724994295,0.5645906131411902,0.5335832483382521,0.02002485381960159,1,0.568919358474566,0.5854195050826534,0.5615911339493825,0.5542789253313519,0.5714117403243588,0.5683241326324625,0.010437820593116527,1,0.4492479352704824,0.4700428370190353,0.49302301458562003,0.46160807443370927,0.4884534642706773,0.47247506511590487,0.01637702199923688,1,Logistic
11.577878713607788,0.2872289883907133,1.5504789352416992,0.07676127553059618,{'up_balancing_counts': 800},False,<pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7ff85a24a160>,<function text_preprocessor at 0x7ff86e9cf3a0>,l2,"(2, 3)",3,0.95,TfidfVectorizer(),8,KBinsDiscretizer(strategy='kmeans'),"KBinsDiscretizer(n_bins=3, strategy='kmeans')",<function chi2 at 0x7ff86e9b8790>,85,"SelectPercentile(percentile=85, score_func=<function chi2 at 0x7ff86e9b8790>)",PassiveAggressiveClassifier(),,,,,"{'sampling__kw_args': {'up_balancing_counts': 800}, 'preprocessor__texttr__text__transformer__use_idf': False, 'preprocessor__texttr__text__transformer__tokenizer': <pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7ff85a24a160>, 'preprocessor__texttr__text__transformer__preprocessor': <function text_preprocessor at 0x7ff86e9cf3a0>, 'preprocessor__texttr__text__transformer__norm': 'l2', 'preprocessor__texttr__text__transformer__ngram_range': (2, 3), 'preprocessor__texttr__text__transformer__min_df': 3, 'preprocessor__texttr__text__transformer__max_df': 0.95, 'preprocessor__texttr__text__transformer': TfidfVectorizer(), 'preprocessor__sentimenttr__scaler__scaler__n_bins': 8, 'preprocessor__sentimenttr__scaler__scaler': KBinsDiscretizer(strategy='kmeans'), 'preprocessor__lengthtr__scaler__scaler': KBinsDiscretizer(n_bins=3, strategy='kmeans'), 'featsel__selector__score_func': <function chi2 at 0x7ff86e9b8790>, 'featsel__selector__percentile': 85, 'featsel__selector': SelectPercentile(percentile=85, score_func=<function chi2 at 0x7ff86e9b8790>), 'clf__estimator': PassiveAggressiveClassifier()}",0.5870036101083033,0.5855595667870036,0.5689530685920577,0.5867052023121387,0.6026011560693642,0.5861645207737735,0.010656072848916752,2,0.36400307709206126,0.36302379959337,0.42177359118510066,0.3713433634868697,0.4130172850712882,0.386632223285738,0.025433333969058274,2,0.4586124257596842,0.45415158596194766,0.4518233645455938,0.45881866966232426,0.48269967052351737,0.4612211432906134,0.011065272748098287,2,0.33425257646643797,0.32646851114068465,0.3959122290401148,0.3351558999502269,0.3549549920748518,0.34934884173446323,0.025109457615126063,2,PassiveAggressiveClassifier

mean_fit_time,std_fit_time,mean_score_time,std_score_time,param_sampling__kw_args,param_clf__estimator__penalty,param_clf__estimator__max_iter,param_clf__estimator__loss,param_clf__estimator__class_weight,param_clf__estimator,param_alltrans__theme__scaler,param_preprocessor__texttr__text__transformer__use_idf,param_preprocessor__texttr__text__transformer__tokenizer,param_preprocessor__texttr__text__transformer__preprocessor,param_preprocessor__texttr__text__transformer__norm,param_preprocessor__texttr__text__transformer__ngram_range,param_preprocessor__texttr__text__transformer__min_df,param_preprocessor__texttr__text__transformer__max_df,param_preprocessor__texttr__text__transformer,param_preprocessor__sentimenttr__scaler__scaler__n_bins,param_preprocessor__sentimenttr__scaler__scaler,param_preprocessor__lengthtr__scaler__scaler,param_featsel__selector__score_func,param_featsel__selector__percentile,param_featsel__selector,params,split0_test_Accuracy,split1_test_Accuracy,mean_test_Accuracy,std_test_Accuracy,rank_test_Accuracy,split0_test_Balanced Accuracy,split1_test_Balanced Accuracy,mean_test_Balanced Accuracy,std_test_Balanced Accuracy,rank_test_Balanced Accuracy,split0_test_Matthews Correlation Coefficient,split1_test_Matthews Correlation Coefficient,mean_test_Matthews Correlation Coefficient,std_test_Matthews Correlation Coefficient,rank_test_Matthews Correlation Coefficient,split0_test_Class Balance Accuracy,split1_test_Class Balance Accuracy,mean_test_Class Balance Accuracy,std_test_Class Balance Accuracy,rank_test_Class Balance Accuracy,learner
7.141756176948547,0.22540438175201416,2.223474860191345,0.10881197452545166,{'up_balancing_counts': 800},elasticnet,10000,log,balanced,"SGDClassifier(class_weight='balanced', loss='log', max_iter=10000,
              penalty='elasticnet')","ThemeBinarizer(class_col='theme', target_class=""Couldn't be improved"")",False,<pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7fab67e3b850>,<function text_preprocessor at 0x7fab7bffe430>,None,"(1, 3)",1,0.7,"TfidfVectorizer(max_df=0.7, ngram_range=(1, 3), norm=None,
                preprocessor=<function text_preprocessor at 0x7fab7bffe430>,
                tokenizer=<pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7fab67e3b850>,
                use_idf=False)",8,"KBinsDiscretizer(n_bins=8, strategy='kmeans')","KBinsDiscretizer(n_bins=3, strategy='kmeans')",<function chi2 at 0x7fab7bfe7820>,100,"SelectPercentile(percentile=100, score_func=<function chi2 at 0x7fab7bfe7820>)","{'sampling__kw_args': {'up_balancing_counts': 800}, 'clf__estimator__penalty': 'elasticnet', 'clf__estimator__max_iter': 10000, 'clf__estimator__loss': 'log', 'clf__estimator__class_weight': 'balanced', 'clf__estimator': SGDClassifier(class_weight='balanced', loss='log', max_iter=10000,
              penalty='elasticnet'), 'alltrans__theme__scaler': ThemeBinarizer(class_col='theme', target_class=""Couldn't be improved""), 'alltrans__process__preprocessor__texttr__text__transformer__use_idf': False, 'alltrans__process__preprocessor__texttr__text__transformer__tokenizer': <pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7fab67e3b850>, 'alltrans__process__preprocessor__texttr__text__transformer__preprocessor': <function text_preprocessor at 0x7fab7bffe430>, 'alltrans__process__preprocessor__texttr__text__transformer__norm': None, 'alltrans__process__preprocessor__texttr__text__transformer__ngram_range': (1, 3), 'alltrans__process__preprocessor__texttr__text__transformer__min_df': 1, 'alltrans__process__preprocessor__texttr__text__transformer__max_df': 0.7, 'alltrans__process__preprocessor__texttr__text__transformer': TfidfVectorizer(max_df=0.7, ngram_range=(1, 3), norm=None,
                preprocessor=<function text_preprocessor at 0x7fab7bffe430>,
                tokenizer=<pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7fab67e3b850>,
                use_idf=False), 'alltrans__process__preprocessor__sentimenttr__scaler__scaler__n_bins': 8, 'alltrans__process__preprocessor__sentimenttr__scaler__scaler': KBinsDiscretizer(n_bins=8, strategy='kmeans'), 'alltrans__process__preprocessor__lengthtr__scaler__scaler': KBinsDiscretizer(n_bins=3, strategy='kmeans'), 'alltrans__process__featsel__selector__score_func': <function chi2 at 0x7fab7bfe7820>, 'alltrans__process__featsel__selector__percentile': 100, 'alltrans__process__featsel__selector': SelectPercentile(percentile=100, score_func=<function chi2 at 0x7fab7bfe7820>)}",0.534937663090751,0.539576688895332,0.5372571759930415,0.002319512902290488,1,0.43320207385465753,0.42644489054631174,0.4298234822004846,0.0033785916541728966,1,0.4117036537226686,0.4171886072988933,0.41444613051078094,0.002742476788112347,1,0.387012632175952,0.3856998390236386,0.38635623559979526,0.0006563965761567092,1,Logistic
